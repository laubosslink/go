.TH "test/tmp.c" 3 "Jeudi Février 20 2014" "Jeu du GO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
test/tmp.c \- 
.SH SYNOPSIS
.br
.PP
.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBChaines\fP \fBcaptureChaines\fP (\fBPlateau\fP plateau, \fBPion\fP pion, int *valide)"
.br
.in -1c
.SH "Documentation des fonctions"
.PP 
.SS "\fBChaines\fP \fBcaptureChaines\fP (\fBPlateau\fPplateau, \fBPion\fPpion, int *valide)"En fonction de la position du pion et de sa couleur, retourne les chaines captures\&. Si aucune chaine n'est capturé par la pose du pion, alors la valeur NULL est retournée\&. L'entier (référencé par) valide est égal à zéro si le fait de placer le pion en cette position conduit à construire une chaine sans liberté de la couleur du pion (sauf si ce coup produit la capture d'au moins une chaine adverse)\&. Dans le cas contraire l'entier référencé par valide est égale à 1
.PP
\fBParamètres:\fP
.RS 4
\fIplateau\fP Le plateau 
.br
\fIpion\fP le pion 
.br
\fIvalide\fP 
.RE
.PP
\fBRenvoie:\fP
.RS 4
un ensemble de chaine 
.RE
.PP
initialisation des chaines
.PP
on determine la chaine a laquelle appartient le pion
.PP
\fBA faire\fP
.RS 4
valide vaudra toujours 1 !? d'où valide=0 au dessus inutile !? il n'y a aucun return\&.\&.\&. donc on arrivera forcément ici ! 
.RE
.PP
.PP
on se deplace sur cette chaine
.PP
on regarde haut, bas, gauche, droite de chaque position de cette chaine
.PP
on determine la chaine de chaque haut/bas/gauche/droite, et on l'ajoute dans une Chaines 'tmp'
.PP
on vérifie les libertés de chaque chaine, et si ensemble_vide(libertes) == 1 pour une chaine, on capture cette chaine 
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Jeu du GO à partir du code source\&.
